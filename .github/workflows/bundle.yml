name: Bundle

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  bundle:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt
      - name: Bundle (MacOS)
        run: |
          python -m nuitka --standalone --include-data-dir=source=source --noinclude-data-files='*.json' --remove-output --assume-yes-for-downloads --macos-create-app-bundle --macos-app-icon=source/resources/icon.png microcosm.py
          ditto -c -k --sequesterRsrc --keepParent microcosm.app microcosm-osx.zip
        if: matrix.os == 'macos-latest'
      - name: Bundle (Ubuntu)
        run: |
          python -m nuitka --onefile --standalone --include-data-dir=source=source --noinclude-data-files='*.json' --remove-output --assume-yes-for-downloads --linux-icon=source/resources/icon.png -o microcosm microcosm.py
          chmod 744 microcosm
        if: matrix.os == 'ubuntu-latest'
      - name: Bundle (Windows)
        run: |
          python -m nuitka --onefile --standalone --include-data-dir=source=source --noinclude-data-files='*.json' --remove-output --assume-yes-for-downloads microcosm.py
        if: matrix.os == 'windows-latest'
      - name: Upload artifact (MacOS)
        uses: actions/upload-artifact@v3
        with:
          name: microcosm-osx
          path: microcosm-osx.zip
        if: matrix.os == 'macos-latest'
      - name: Upload artifact (Ubuntu)
        uses: actions/upload-artifact@v3
        with:
          name: microcosm-ubuntu-x86
          path: microcosm
        if: matrix.os == 'ubuntu-latest'
      - name: Upload artifact (Windows)
        uses: actions/upload-artifact@v3
        with:
          name: microcosm-windows
          path: microcosm.exe
        if: matrix.os == 'windows-latest'
  bundle-fedora:
    runs-on: ubuntu-latest
    container: fedora
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install requirements
        run: |
          python -m pip install --upgrade pip
          pip install -r dev_requirements.txt
      - name: Bundle
        run: |
          python -m nuitka --onefile --standalone --include-data-dir=source=source --noinclude-data-files='*.json' --remove-output --assume-yes-for-downloads --linux-icon=source/resources/icon.png -o microcosm microcosm.py
          chmod 744 microcosm
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: microcosm-fedora-x86
          path: microcosm
